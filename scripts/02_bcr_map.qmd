```{r}
install.packages("tidyverse")
# Force reinstall even if dependencies fail
install.packages("remotes")
if (!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("alexyermanos/Platypus")

```

```{r}
#| label: Platypus instead of Repertoire
# ========================
# STEP 2: BCR Integration
# Author: Vishnu S. Pillai
# ========================

library(Seurat)
library(tidyverse)
library(Platypus)

#---------------------------
# 1. Load Seurat Object
#---------------------------
seurat_path <- "D:/MG-scRNAseq_BCR/results/Bcells_annotated_seurat_obj.rds"
b_cells <- readRDS(seurat_path)

#---------------------------
# 2. Load BCR Files
#---------------------------
bcr_files <- c(
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408931_MG1_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408932_MG2_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408933_MG3_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408934_MG4_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408935_MG5_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408936_MG6_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408937_MG7_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408938_MG8_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408939_MG9_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408940_MG10_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408941_MG11_BCR.csv",
  "D:/MG-scRNAseq_BCR/data/bcr/GSM7408943_MG12_BCR.csv"
)

sample_names <- paste0("MG", 1:12)

# Load as named list
contig_list <- lapply(bcr_files, read.csv)
names(contig_list) <- sample_names

# Custom barcode fixer for all samples
for (i in seq_along(contig_list)) {
  sample <- sample_names[i]  # e.g., "MG1", "MG2"
  
  # Remove EVERYTHING before the actual 10x barcode
  clean_barcode <- sapply(strsplit(contig_list[[i]]$barcode, "_"), function(x) tail(x, 1))
  
  # Recreate correct barcode: sample_barcode
  contig_list[[i]]$barcode <- paste0(sample, "_", clean_barcode)
}

#---------------------------
# Match barcodes to Seurat object
# Merge all BCR files into one dataframe with sample info
for (i in seq_along(contig_list)) {
  contig_list[[i]]$sample_id <- sample_names[i]
}
combined_bcr <- dplyr::bind_rows(contig_list)

# Filter barcodes to match Seurat object
combined_bcr <- combined_bcr %>%
  filter(barcode %in% colnames(b_cells))

# Add clonotype info to Seurat meta.data
b_cells$raw_clonotype_id <- combined_bcr$raw_clonotype_id[match(colnames(b_cells), combined_bcr$barcode)]

#---------------------------
# 4. Save Updated Object
#---------------------------
saveRDS(b_cells, "D:/MG-scRNAseq_BCR/results/Bcells_clonemapped_seurat_obj.rds")

#---------------------------
# 5. UMAP Clone Overlay
#---------------------------
library(ggplot2)
umap_df <- as.data.frame(Embeddings(b_cells, "umap"))
umap_df$clonotype <- b_cells$raw_clonotype_id

p1 <- ggplot(umap_df, aes(x = umap_1, y = umap_2, color = clonotype)) +
  geom_point(size = 1, alpha = 0.8) +
  theme_minimal() +
  ggtitle("BCR Clonotype Distribution in B Cells") +
  theme(legend.position = "none")
p1
dir.create("D:/MG-scRNAseq_BCR/figures/clones", recursive = TRUE, showWarnings = FALSE)
ggsave("D:/MG-scRNAseq_BCR/figures/clones/Bcell_clone_overlay.png", p1, width = 8, height = 6)

#---------------------------
# 6. Clonal Expansion Table
#---------------------------
clone_counts <- b_cells@meta.data %>%
  group_by(Bcell_type, raw_clonotype_id) %>%
  summarise(count = n()) %>%
  ungroup() %>%
  group_by(Bcell_type) %>%
  summarise(unique_clones = n(),
            total_cells = sum(count),
            max_clone_size = max(count))

dir.create("D:/MG-scRNAseq_BCR/results/tables", recursive = TRUE, showWarnings = FALSE)
write.csv(clone_counts, "D:/MG-scRNAseq_BCR/results/tables/Bcell_clone_stats.csv", row.names = FALSE)
```
```{r}
#| label: Clonotype chunk with labeling umaps
library(ggplot2)
library(dplyr)

#------------------------------------------
# 1. Identify Top 10 Expanded Clonotypes
#------------------------------------------
top_clones <- b_cells@meta.data %>%
  count(raw_clonotype_id, sort = TRUE) %>%
  slice_head(n = 10) %>%
  pull(raw_clonotype_id)

#------------------------------------------
# 2. Label Top Clones, Rest as "Other"
#------------------------------------------
b_cells$clone_label <- ifelse(
  b_cells$raw_clonotype_id %in% top_clones,
  b_cells$raw_clonotype_id,
  "Other"
)

#------------------------------------------
# 3. Prepare UMAP with Clone Labels
#------------------------------------------
umap_df <- as.data.frame(Embeddings(b_cells, "umap"))
umap_df$clone_label <- b_cells$clone_label

# Optional: Clean up long strings for legend
umap_df$clone_label <- factor(umap_df$clone_label)

#------------------------------------------
# 4. Plot + Save UMAP with Legend
#------------------------------------------
p_top10 <- ggplot(umap_df, aes(x = umap_1, y = umap_2, color = clone_label)) +
  geom_point(size = 1, alpha = 0.8) +
  theme_minimal() +
  ggtitle("Top 10 BCR Clones in B Cells") +
  guides(color = guide_legend(override.aes = list(size = 3))) +
  theme(legend.position = "right")

# Save image
ggsave("D:/MG-scRNAseq_BCR/figures/clones/Bcell_clone_top10_legend.png", p_top10, width = 9, height = 6)

```

